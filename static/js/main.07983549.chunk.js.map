{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","state","break","session","count","onoff","label","decrementBreak","bind","incrementBreak","decrementSession","incrementSession","reset","start","convertSeconds","this","setState","clearInterval","timer","document","getElementById","pause","currentTime","s","sec","prependZero","number","Math","floor","setInterval","counter","play","className","id","src","onClick","href","class","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.07983549.chunk.js","sourcesContent":["import React from 'react';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      break: 5,\n      session: 25,\n      count: 1500,\n      onoff: 0,\n      label: \"Session\"\n    };\n    this.decrementBreak = this.decrementBreak.bind(this);\n    this.incrementBreak = this.incrementBreak.bind(this);\n    this.decrementSession = this.decrementSession.bind(this);\n    this.incrementSession = this.incrementSession.bind(this);\n    this.reset = this.reset.bind(this);\n    this.start = this.start.bind(this);\n    this.convertSeconds = this.convertSeconds.bind(this);\n  }\n  decrementBreak() {\n    if (this.state.break > 1) {\n      this.setState((state) => ({\n        break: state.break - 1\n      }));\n    }\n  }\n  incrementBreak() {\n    if (this.state.break < 60) {\n      this.setState((state) => ({\n        break: state.break + 1\n      }));\n    }\n  }\n  decrementSession() {\n    if (this.state.session > 1) {\n      this.setState((state) => ({\n        session: state.session - 1,\n        count: state.session * 60 - 60\n      }));\n    }\n  }\n  incrementSession() {\n    if (this.state.session < 60) {\n      this.setState((state) => ({\n        session: state.session + 1,\n        count: state.session * 60 + 60\n      }));\n    }\n  }\n  reset() {\n    clearInterval(this.timer);\n    document.getElementById(\"beep\").pause();\n    document.getElementById(\"beep\").currentTime = 0;\n    this.setState((state) => ({\n      break: 5,\n      session: 25,\n      count: 1500,\n      onoff: 0,\n      label: \"Session\"\n    }));\n  }\n\n  convertSeconds(s) {\n    let min = Math.floor(s / 60);\n    let sec = s % 60;\n    function prependZero(number) {\n      if (number < 10) return \"0\" + number;\n      else return number;\n    }\n    return prependZero(min) + \":\" + prependZero(sec);\n  }\n\n  start() {\n    if (this.state.onoff === 0) {\n      this.timer = setInterval(() => this.counter(), 1000);\n      this.setState({\n        onoff: 1\n      });\n    } else {\n      clearInterval(this.timer);\n      this.setState({\n        onoff: 0\n      });\n    }\n  }\n\n  counter() {\n    if (this.state.count >= 0) {\n      this.setState({\n        count: this.state.count - 1\n      });\n    }\n    if (this.state.count === 0) {\n      document.getElementById(\"beep\").play();\n    }\n    if (this.state.count < 0 && this.state.label === \"Session\") {\n      clearInterval(this.timer);\n      this.setState({\n        count: this.state.break * 60,\n        onoff: 0,\n        label: \"Break\"\n      });\n      this.start();\n    }\n    if (this.state.count < 0 && this.state.label === \"Break\") {\n      clearInterval(this.timer);\n      this.setState({\n        count: this.state.session * 60,\n        onoff: 0,\n        label: \"Session\"\n      });\n      this.start();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"container h-100\">\n        <div className=\"row h-100 align-items-center\">\n          <div className=\"col text-center bg-dark\">\n            <div className=\"row\">\n              <div className=\"col\">\n                <h1 className=\"display-4\">Pomodoro Clock</h1>\n              </div>\n            </div>\n            <div className=\"row my-5\">\n              <div className=\"col\">\n                <div className=\"session border border-white rounded-circle p-5 m-auto\">\n                  <h2 id=\"timer-label\">{this.state.label}</h2>\n                  <div id=\"time-left\" className=\"display-4 my-5\">\n                    {this.convertSeconds(this.state.count)}\n                  </div>\n                  <audio\n                    id=\"beep\"\n                    src=\"http://static1.grsites.com/archive/sounds/musical/musical012.mp3\"\n                  ></audio>\n                  <span\n                    id=\"start_stop\"\n                    className=\"text-light action\"\n                    onClick={this.start}\n                  >\n                    <i className=\"fas fa-play\"></i>\n                    <i className=\"fas fa-pause\"></i>\n                  </span>\n                  <span\n                    id=\"reset\"\n                    className=\"text-light ml-2 action\"\n                    onClick={this.reset}\n                  >\n                    <i className=\"fas fa-undo-alt\"></i>\n                  </span>\n                </div>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col\">\n                <div className=\"lead\" id=\"break-label\">\n                  Break Length\n                </div>\n                <span\n                  id=\"break-decrement\"\n                  className=\"text-light action\"\n                  onClick={this.decrementBreak}\n                >\n                  <i className=\"fas fa-chevron-down\"></i>\n                </span>\n                <span id=\"break-length\" className=\"mx-2\">\n                  {this.state.break}\n                </span>\n                <span\n                  id=\"break-increment\"\n                  className=\"text-light action\"\n                  onClick={this.incrementBreak}\n                >\n                  <i className=\"fas fa-chevron-up\"></i>\n                </span>\n              </div>\n              <div className=\"col\">\n                <div className=\"lead\" id=\"session-label\">\n                  Session Length\n                </div>\n                <span\n                  id=\"session-decrement\"\n                  className=\"text-light action\"\n                  onClick={this.decrementSession}\n                >\n                  <i className=\"fas fa-chevron-down\"></i>\n                </span>\n                <span id=\"session-length\" className=\"mx-2\">\n                  {this.state.session}\n                </span>\n                <span\n                  id=\"session-increment\"\n                  className=\"text-light action\"\n                  onClick={this.incrementSession}\n                >\n                  <i className=\"fas fa-chevron-up\"></i>\n                </span>\n              </div>\n            </div>\n            <div className=\"row mt-5\">\n              <div className=\"col\">\n                Coded by <a href=\"http://www.vinweb.hu\" class=\"text-white\">Janos Vincze</a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}